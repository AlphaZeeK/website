import Unibeautify, { OptionsRegistry } from "unibeautify";
import * as _ from "lodash";

import Doc from "./Doc";
import MarkdownBuilder from "./MarkdownBuilder";

export default class OptionsDoc extends Doc {

  public get title(): string {
    return "Options";
  }

  public get prefix(): string {
    return "";
  }

  protected get body(): string {
    const builder = new MarkdownBuilder();
    const options = this.allOptions;
    builder.append(`<AUTOGENERATED_TABLE_OF_CONTENTS>\n`);
    Object.keys(options).forEach(key => {
      const option = options[key];
      let title: string = option.title || "";
      if (!title) {
        title = key.split('_').map(_.capitalize).join(' ');
      }
      builder.header(title, 3, true);
      builder.append(`**Key**: \`${key}\`\n`);
      builder.append(`**Type**: \`${option.type}\`\n`);
      builder.append(`**Default**: \`${JSON.stringify(option.default)}\`\n`);
      builder.append(`**Description**: ${option.description}\n`);
    });
    return builder.build();
  }

  public get allOptions(): OptionsRegistry[] {
    return (Unibeautify as any).options;
  }

}